[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "dask-awkward"
description = "Awkward Array meets Dask"
readme = "README.md"
license = {text = "BSD-3-Clause"}
requires-python = ">=3.9"
authors = [
  { name = "Doug Davis", email = "ddavis@ddavis.io" },
  { name = "Martin Durant", email = "mdurant@anaconda.com" },
]
maintainers = [
  { name = "Doug Davis", email = "ddavis@ddavis.io" },
  { name = "Martin Durant", email = "mdurant@anaconda.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Software Development",
]
dependencies = [
  "awkward >=2.5.1",
  "dask >=2023.04.0",
  "cachetools",
  "typing_extensions >=4.8.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/dask-contrib/dask-awkward"
"Bug Tracker" = "https://github.com/dask-contrib/dask-awkward/issues"

[project.optional-dependencies]
io = [
  "pyarrow",
]
complete = [
  "dask-awkward[io]",
]
# `docs` and `test` are separate from user installs
docs = [
  "dask-awkward[complete]",
  "sphinx-book-theme",
  "sphinx-design",
  "sphinx-codeautolink",
  # broken see PR 451
  # "dask-sphinx-theme",
]
test = [
  "aiohttp;python_version<\"3.12\"",
  "dask[dataframe]",
  "dask-awkward[complete]",
  "dask-histogram",
  "distributed",
  "hist",
  "pandas",
  "pytest >=6.0",
  "pytest-cov >=3.0.0",
  "requests",
  "uproot >=5.1.0",
]

[project.entry-points."dask.sizeof"]
awkward = "dask_awkward_sizeof:register"

[tool.hatch.build.targets.sdist.force-include]
"src/dask_awkward_sizeof" = "src/dask_awkward_sizeof"

[tool.hatch.build.targets.wheel]
packages = ["src/dask_awkward", "src/dask_awkward_sizeof"]

[project.entry-points."awkward.pickle.reduce"]
dask_awkward = "dask_awkward.pickle:plugin"

[tool.hatch.version]
source = "vcs"
path = "src/dask_awkward/__init__.py"

[tool.hatch.build.hooks.vcs]
version-file = "src/dask_awkward/version.py"

[tool.hatch.build.targets.sdist]
include = ["/src"]

[tool.setuptools_scm]
write_to = "src/dask_awkward/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
addopts = ["-v", "-ra", "--showlocals", "--strict-markers", "--strict-config"]
log_cli_level = "DEBUG"
filterwarnings = ["ignore:There is no current event loop"]
xfail_strict = false

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.9"
files = ["src"]
exclude = ["tests/"]
strict = false
warn_unused_configs = true
show_error_codes = true
allow_incomplete_defs = false
allow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[[tool.mypy.overrides]]
  module = [
    "awkward.*",
    "IPython.*",
    "fsspec.*",
    "pyarrow.*",
    "tlz.*",
    "uproot.*",
    "cloudpickle.*",
    "cachetools.*"
  ]
  ignore_missing_imports = true

[tool.pyright]
include = ["src"]
pythonVersion = "3.9"
reportPrivateImportUsage = false

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "except ImportError:",
  "NotImplementedError",
  "DaskAwkwardNotImplemented",
  "_ipython_key_completions_",
  "Only highlevel=True is supported",
  "\\.\\.\\.$",
]
fail_under = 90
show_missing = true

[tool.coverage.run]
omit = [
  "*/dask_awkward/lib/unproject_layout.py",
  "*/tests/test_*.py",
  "*/tests/__init__.py",
  "*/version.py",
]
source = ["src/"]

[tool.ruff]
ignore = ["E501", "E402"]
per-file-ignores = {"__init__.py" = ["E402", "F401"]}
